{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/hungb/AppData/Roaming/npm/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/hungb/AppData/Roaming/npm/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"C:/Users/hungb/AppData/Roaming/npm/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\pages\\\\_app.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }));\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appCtx) {\n    var Component, ctx, pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // calls page's `getInitialProps` and fills `appProps.pageProps`\n            Component = appCtx.Component, ctx = appCtx.ctx;\n            _context.t1 = Component.getInitialProps;\n\n            if (!_context.t1) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 5;\n            return Component.getInitialProps(ctx);\n\n          case 5:\n            _context.t1 = _context.sent;\n\n          case 6:\n            _context.t0 = _context.t1;\n\n            if (_context.t0) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.t0 = {};\n\n          case 9:\n            pageProps = _context.t0;\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/pages/_app.tsx"],"names":["MyApp","Component","pageProps","getInitialProps","appCtx","ctx"],"mappings":";;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAAuC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AACnD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AACA;;;KARMF,K;;AASNA,KAAK,CAACG,eAAN;AAAA,uEAAwB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB;AACQH,YAAAA,SAFc,GAEKG,MAFL,CAEdH,SAFc,EAEHI,GAFG,GAEKD,MAFL,CAEHC,GAFG;AAAA,0BAGHJ,SAAS,CAACE,eAHP;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGiCF,SAAS,CAACE,eAAV,CAA0BE,GAA1B,CAHjC;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,0BAGqE,EAHrE;;AAAA;AAGhBH,YAAAA,SAHgB;AAAA,6CAIf;AAAEA,cAAAA,SAAS,EAATA;AAAF,aAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeF,KAAf","sourcesContent":["import type { AppProps , AppContext } from 'next/app';\r\n\r\nconst MyApp = ({ Component, pageProps}: AppProps) => {\r\n  return <Component {...pageProps} />\r\n};\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\nMyApp.getInitialProps = async (appCtx: AppContext) => {\r\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  const { Component, ctx } = appCtx;\r\n  const pageProps = (Component.getInitialProps && (await Component.getInitialProps(ctx))) || {};\r\n  return { pageProps };\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}