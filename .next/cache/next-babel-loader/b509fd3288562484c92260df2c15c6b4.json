{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 10\n    }\n  }));\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async appCtx => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const {\n    Component,\n    ctx\n  } = appCtx;\n  const pageProps = Component.getInitialProps && (await Component.getInitialProps(ctx)) || {};\n  return {\n    pageProps\n  };\n};\n\nexport default MyApp;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/pages/_app.tsx"],"names":["MyApp","Component","pageProps","getInitialProps","appCtx","ctx"],"mappings":";;;;;;AAEA,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAuC;AACnD,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AACA;;;AACAF,KAAK,CAACG,eAAN,GAAwB,MAAOC,MAAP,IAA8B;AACpD;AACA,QAAM;AAAEH,IAAAA,SAAF;AAAaI,IAAAA;AAAb,MAAqBD,MAA3B;AACA,QAAMF,SAAS,GAAID,SAAS,CAACE,eAAV,KAA8B,MAAMF,SAAS,CAACE,eAAV,CAA0BE,GAA1B,CAApC,CAAD,IAAyE,EAA3F;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACD,CALD;;AAOA,eAAeF,KAAf","sourcesContent":["import type { AppProps , AppContext } from 'next/app';\r\n\r\nconst MyApp = ({ Component, pageProps}: AppProps) => {\r\n  return <Component {...pageProps} />\r\n};\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\nMyApp.getInitialProps = async (appCtx: AppContext) => {\r\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n  const { Component, ctx } = appCtx;\r\n  const pageProps = (Component.getInitialProps && (await Component.getInitialProps(ctx))) || {};\r\n  return { pageProps };\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}