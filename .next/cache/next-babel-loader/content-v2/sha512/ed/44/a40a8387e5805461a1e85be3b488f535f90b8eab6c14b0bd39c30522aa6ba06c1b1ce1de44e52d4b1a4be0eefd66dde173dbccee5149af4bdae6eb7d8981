{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\public\\\\js\\\\immediatelysearchmovie.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport Link from 'next/link';\nimport { InstantSearch, Hits, SearchBox, Configure } from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\nconst algoliaClient = algoliasearch('ZKW9BQZTYO', '30893489e7dd37f194b7947ceeaa6523');\nconst searchClient = {\n  search(requests) {\n    if (requests.every(({\n      params\n    }) => !params.query)) {\n      return Promise.resolve({\n        results: requests.map(() => ({\n          hits: [],\n          nbHits: 0,\n          nbPages: 0,\n          processingTimeMS: 0\n        }))\n      });\n    }\n\n    return algoliaClient.search(requests);\n  }\n\n};\n\nfunction MovieResult() {\n  let {\n    0: index,\n    1: setIndex\n  } = useState(\"\");\n  return __jsx(InstantSearch, {\n    searchClient: searchClient,\n    indexName: \"Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }\n  }, __jsx(Configure, {\n    hitsPerPage: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), \" \", __jsx(SearchBox, {\n    className: \"immediately-search-box\",\n    translations: {\n      placeholder: 'Search for Movies, Genres that you are looking for'\n    },\n    onSubmit: event => {\n      event.preventDefault();\n      window.location.href = '/searchresult?' + index + '';\n    },\n    onChange: event => {\n      setIndex(index = event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }), \" \", __jsx(\"div\", {\n    className: \"search-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }, __jsx(Hits, {\n    hitComponent: Hit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), \" \", \" \"), \" \");\n}\n\nconst Hit = ({\n  hit\n}) => __jsx(\"a\", {\n  href: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 28\n  }\n}, __jsx(\"div\", {\n  className: \"item\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"avatar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }\n}, __jsx(\"img\", {\n  src: hit.urlCover,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n})), \" \", __jsx(\"div\", {\n  className: \"info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 11\n  }\n}, __jsx(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, \" \", hit.Title, \" \"), \" \", __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 31\n  }\n}, \" \", hit.Year, \" \"), \" \", __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 28\n  }\n}, __jsx(\"label\", {\n  style: {\n    color: 'orange',\n    fontSize: '15px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }\n}, \" \\u2605 \"), \" \", hit.IMDB, \" \", __jsx(\"span\", {\n  style: {\n    fontSize: '10px',\n    marginLeft: '-2px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 74\n  }\n}, \" /10 \")), \" \"), \" \"), \" \");\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired\n};\nexport default MovieResult;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/public/js/immediatelysearchmovie.js"],"names":["React","Component","useState","algoliasearch","Link","InstantSearch","Hits","SearchBox","Configure","PropTypes","algoliaClient","searchClient","search","requests","every","params","query","Promise","resolve","results","map","hits","nbHits","nbPages","processingTimeMS","MovieResult","index","setIndex","placeholder","event","preventDefault","window","location","href","target","value","Hit","hit","urlCover","Title","Year","color","fontSize","IMDB","marginLeft","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport Link from 'next/link';\r\nimport {\r\n    InstantSearch,\r\n    Hits,\r\n    SearchBox,\r\n    Configure\r\n} from 'react-instantsearch-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst algoliaClient = algoliasearch(\r\n    'ZKW9BQZTYO',\r\n    '30893489e7dd37f194b7947ceeaa6523'\r\n);\r\nconst searchClient = {\r\n    search(requests) {\r\n        if (requests.every(({ params }) => !params.query)) {\r\n            return Promise.resolve({\r\n                results: requests.map(() => ({\r\n                    hits: [],\r\n                    nbHits: 0,\r\n                    nbPages: 0,\r\n                    processingTimeMS: 0,\r\n                })),\r\n            });\r\n        }\r\n\r\n        return algoliaClient.search(requests);\r\n    },\r\n};\r\n\r\nfunction MovieResult() {\r\n    let [index, setIndex] = useState(\"\");\r\n    return ( <\r\n        InstantSearch searchClient = { searchClient }\r\n        indexName = \"Movies\" >\r\n        <\r\n        Configure hitsPerPage = { 5 }\r\n        /> <\r\n        SearchBox className = \"immediately-search-box\"\r\n        translations = {\r\n            {\r\n                placeholder: 'Search for Movies, Genres that you are looking for',\r\n            }\r\n        }\r\n        onSubmit = {\r\n            event => {\r\n                event.preventDefault();\r\n                window.location.href = '/searchresult?' + index + '';\r\n            }\r\n        }\r\n        onChange = {\r\n            event => {\r\n                setIndex(index = event.target.value);\r\n            }\r\n        }\r\n        /> <\r\n        div className = \"search-result\" >\r\n        <\r\n        Hits hitComponent = { Hit }\r\n        /> {\r\n            /* <Link style={{display: show? \"block\" : \"none\"}} href='searchresult'>\r\n                      <div className=\"bottom\">\r\n                        <a href=\"searchresult\"> See all results </a>\r\n                      </div>\r\n                    </Link> */\r\n        } <\r\n        /div> <\r\n        /InstantSearch>\r\n    );\r\n}\r\n\r\nconst Hit = ({ hit }) => ( <\r\n    a href = { \"/\" } >\r\n    <\r\n    div className = \"item\" >\r\n    <\r\n    div className = \"avatar\" >\r\n    <\r\n    img src = { hit.urlCover }\r\n    alt = \"\" / >\r\n    <\r\n    /div> <\r\n    div className = \"info\" >\r\n    <\r\n    h4 > { hit.Title } < /h4> <\r\n    p > { hit.Year } < /p> <\r\n    div >\r\n    <\r\n    label style = {\r\n        { color: 'orange', fontSize: '15px' } } > ★ < /label> {hit.IMDB} <\r\n    span style = {\r\n        { fontSize: '10px', marginLeft: '-2px' } } > /10 </span >\r\n    <\r\n    /div> <\r\n    /div> <\r\n    /div> <\r\n    /a>\r\n);\r\n\r\nHit.propTypes = {\r\n    hit: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MovieResult;"]},"metadata":{},"sourceType":"module"}