{"ast":null,"code":"import _slicedToArray from \"D:/Study/Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p/luanvan201frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\pages\\\\test.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nvar Test = function Test() {\n  _s();\n\n  var swear = [\"arse\", \"ass\", \"asshole\", \"bastard\", \"bitch\", \"bollocks\", \"bugger\", \"bullshit\", \"crap\", \"damn\", \"frigger\"];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      setText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      badword = _React$useState4[0],\n      setBadword = _React$useState4[1];\n\n  var bogusCheck = function bogusCheck(text) {\n    var foundSwears = swear.filter(function (word) {\n      return text.includes(word);\n    });\n\n    if (foundSwears.length) {\n      console.log(\"Bad word found\");\n      setBadword(badword = foundSwears);\n    } else {\n      console.log(\"No bad word found\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Profanity Checker\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Enter a sentence below and click the button below:\"), __jsx(\"textarea\", {\n    value: text,\n    onChange: function onChange(e) {\n      return setText(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return bogusCheck(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Profanity Check\"), __jsx(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \" \", badword, \" \"));\n};\n\n_s(Test, \"aEFYts1IHlZCw26l/Zz69y4npIg=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/pages/test.tsx"],"names":["React","Test","swear","useState","text","setText","badword","setBadword","bogusCheck","foundSwears","filter","word","includes","length","console","log","e","target","value","color"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAIC,KAAK,GAAG,CACV,MADU,EAEV,KAFU,EAGV,SAHU,EAIV,SAJU,EAKV,OALU,EAMV,UANU,EAOV,QAPU,EAQV,UARU,EASV,MATU,EAUV,MAVU,EAWV,SAXU,CAAZ;;AADiB,wBAcKF,KAAK,CAACG,QAAN,CAAe,EAAf,CAdL;AAAA;AAAA,MAcZC,IAdY;AAAA,MAcNC,OAdM;;AAAA,yBAeWL,KAAK,CAACG,QAAN,CAAe,EAAf,CAfX;AAAA;AAAA,MAeZG,OAfY;AAAA,MAeHC,UAfG;;AAgBjB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,IAAD,EAAU;AAC3B,QAAMK,WAAW,GAAGP,KAAK,CAACQ,MAAN,CAAa,UAACC,IAAD;AAAA,aAAUP,IAAI,CAACQ,QAAL,CAAcD,IAAd,CAAV;AAAA,KAAb,CAApB;;AACA,QAAIF,WAAW,CAACI,MAAhB,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAR,MAAAA,UAAU,CAAED,OAAO,GAAGG,WAAZ,CAAV;AACD,KAHD,MAGO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,GARD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFF,EAGE;AACE,IAAA,KAAK,EAAEX,IADT;AAEE,IAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,aAAOX,OAAO,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACJ,IAAD,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,EASE;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCb,OAAjC,MATF,CADF;AAaD,CAvCD;;GAAML,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Test = () => {\r\n  let swear = [\r\n    \"arse\",\r\n    \"ass\",\r\n    \"asshole\",\r\n    \"bastard\",\r\n    \"bitch\",\r\n    \"bollocks\",\r\n    \"bugger\",\r\n    \"bullshit\",\r\n    \"crap\",\r\n    \"damn\",\r\n    \"frigger\"\r\n  ];\r\n  let [text, setText] = React.useState(\"\");\r\n  let [badword, setBadword] = React.useState(\"\");\r\n  const bogusCheck = (text) => {\r\n    const foundSwears = swear.filter((word) => text.includes(word));\r\n    if (foundSwears.length) {\r\n      console.log(\"Bad word found\");\r\n      setBadword((badword = foundSwears));\r\n    } else {\r\n      console.log(\"No bad word found\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Profanity Checker</h1>\r\n      <p>Enter a sentence below and click the button below:</p>\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <br />\r\n      <button onClick={() => bogusCheck(text)}>Profanity Check</button>\r\n      <span style={{ color: \"red\" }}> {badword} </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}