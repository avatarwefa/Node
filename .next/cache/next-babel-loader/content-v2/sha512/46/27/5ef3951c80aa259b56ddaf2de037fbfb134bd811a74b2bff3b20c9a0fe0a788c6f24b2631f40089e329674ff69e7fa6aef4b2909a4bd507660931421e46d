{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\pages\\\\test.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nfunction Blog({\n  comments\n}) {\n  let {\n    0: showReview,\n    1: setShowReview\n  } = useState(true);\n  let {\n    0: showComment,\n    1: setShowComment\n  } = useState(false);\n  let {\n    0: showReply,\n    1: setShowReply\n  } = useState(false);\n  let {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  let {\n    0: disliked,\n    1: setDisLiked\n  } = useState(false);\n  let {\n    0: flagged,\n    1: setFlagged\n  } = useState(false);\n\n  function toggleLike() {\n    setLiked(!liked);\n  }\n\n  function toggleDisLike() {\n    setDisLiked(!disliked);\n  }\n\n  function toggleReview() {\n    setShowReview(showReview = true);\n    setShowComment(showComment = false);\n  }\n\n  function toggleComment() {\n    setShowReview(showReview = false);\n    setShowComment(showComment = true);\n  }\n\n  function toggleReply() {\n    setShowReply(!showReply);\n  }\n\n  function flag() {\n    setFlagged(flagged = true);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mv-user-comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Write Your Comment Here:\"), __jsx(\"textarea\", {\n    name: \"\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \" SUBMIT \")), __jsx(\"p\", {\n    style: {\n      fontSize: \"12px\",\n      color: \"#a79f9f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"5 comments\"), comments.map((comment, index) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"mv-user-comment-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"avatarcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    className: \"avatar\",\n    src: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, \" \", comment.UserName, \" \"), __jsx(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, \" \", comment.created_at, \" \")), __jsx(\"div\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, \" \", comment.Body, \" \"), __jsx(\"div\", {\n    className: \"iconcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleLike,\n    style: {\n      color: liked ? \"blue\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 125\n    }\n  }), \" \", comment.Like, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleDisLike,\n    style: {\n      color: disliked ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 130\n    }\n  }), \" \", comment.Dislike, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 82\n    }\n  }), \" \", comment.replyCount, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: flag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-flag\",\n    style: {\n      color: flagged ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 75\n    }\n  }), \" \"))))))));\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('http://127.0.0.1:8000/api/comment/showComments/1');\n  const comments = await res.json(); // By returning { props: { posts } }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      comments\n    }\n  };\n}\nexport default Blog;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/pages/test.tsx"],"names":["React","useState","Blog","comments","showReview","setShowReview","showComment","setShowComment","showReply","setShowReply","liked","setLiked","disliked","setDisLiked","flagged","setFlagged","toggleLike","toggleDisLike","toggleReview","toggleComment","toggleReply","flag","fontSize","color","map","comment","index","UserName","created_at","Body","Like","Dislike","replyCount","getStaticProps","res","fetch","json","props"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Blog({ comments }) {\r\n    let [showReview, setShowReview] = useState(true);\r\n    let [showComment, setShowComment] = useState(false);\r\n    let [showReply, setShowReply] = useState(false);\r\n    let [liked, setLiked] = useState(false);\r\n    let [disliked, setDisLiked] = useState(false);\r\n    let [flagged, setFlagged] = useState(false);\r\n    function toggleLike() {\r\n        setLiked(!liked);\r\n    }\r\n    function toggleDisLike() {\r\n        setDisLiked(!disliked);\r\n    }\r\n    function toggleReview() {\r\n        setShowReview(showReview = true);\r\n        setShowComment(showComment = false);\r\n    }\r\n    function toggleComment() {\r\n        setShowReview(showReview = false);\r\n        setShowComment(showComment = true);\r\n    }\r\n    function toggleReply() {\r\n        setShowReply(!showReply);\r\n    }\r\n    function flag() {\r\n        setFlagged(flagged = true);\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className=\"mv-user-comment-box\">\r\n                    <p>Write Your Comment Here:</p>\r\n                    <textarea name=\"\" id=\"\"></textarea>\r\n                    <button> SUBMIT </button>\r\n                </div>\r\n                <p style={{ fontSize: \"12px\", color: \"#a79f9f\" }}>5 comments</p>\r\n                {comments.map((comment, index) => (\r\n                    <div>\r\n                        <div className=\"mv-user-comment-item\" key={index}>\r\n                            <div className=\"avatarcontainer\">\r\n                                <img className=\"avatar\" src=\"\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"body\">\r\n                                <div className=\"info\">\r\n                                    <div className=\"name\"> {comment.UserName} </div>\r\n                                    <div className=\"time\"> {comment.created_at} </div>\r\n                                </div>\r\n                                <div className=\"comment\"> {comment.Body} </div>\r\n                                <div className=\"iconcontainer\">\r\n                                    <div className=\"icon\" onClick={toggleLike} style={{ color: liked ? \"blue\" : \"black\" }}> <i className=\"fa fa-thumbs-o-up\"></i> {comment.Like} </div>\r\n                                    <div className=\"icon\" onClick={toggleDisLike} style={{ color: disliked ? \"red\" : \"black\" }}> <i className=\"fa fa-thumbs-o-down\"></i> {comment.Dislike} </div>\r\n                                    <div className=\"icon\" onClick={toggleReply} ><i className=\"fa fa-reply\"></i> {comment.replyCount} </div>\r\n                                    <div className=\"icon\" onClick={flag} ><i className=\"fa fa-flag\" style={{ color: flagged ? \"red\" : \"black\" }}></i> </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div style={{ display: showReply ? \"block\" : \"none\" }}>\r\n                            {comment.replies.map((reply, index) => (\r\n                                <div className=\"mv-user-reply-item\" key={index}>\r\n                                    <div className=\"avatarcontainer\">\r\n                                        <img className=\"avatar\" src={reply.avatarUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"body\">\r\n                                        <div className=\"info\">\r\n                                            <div className=\"name\"> {reply.repliedBy} </div>\r\n                                            <div className=\"time\"> {reply.time} </div>\r\n                                        </div>\r\n                                        <div className=\"comment\"> {reply.body} </div>\r\n                                        <div className=\"iconcontainer\">\r\n                                            <div className=\"icon\" key={index} onClick={function (event) { toggleLike(index) }} style={{ color: liked ? \"blue\" : \"black\" }} > <i className=\"fa fa-thumbs-o-up\"></i> {reply.likeCount} </div>\r\n                                            <div className=\"icon\" key={index} onClick={function (event) { toggleDisLike(index) }} style={{ color: disliked ? \"red\" : \"black\" }}> <i className=\"fa fa-thumbs-o-down\"></i> {reply.dislikeCount} </div>\r\n                                            <div className=\"icon\" key={index} onClick={flag} ><i className=\"fa fa-flag\" style={{ color: flagged ? \"red\" : \"black\" }}></i> </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <div className=\"mv-user-reply-box\">\r\n                                <textarea name=\"\" id=\"\" placeholder=\"Write your reply here...\"></textarea>\r\n                                <button> SUBMIT </button>\r\n                            </div>\r\n                        </div> */}\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// This function gets called at build time on server-side.\r\n// It won't be called on client-side, so you can even do\r\n// direct database queries. See the \"Technical details\" section.\r\nexport async function getStaticProps() {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    const res = await fetch('http://127.0.0.1:8000/api/comment/showComments/1')\r\n    const comments = await res.json()\r\n\r\n    // By returning { props: { posts } }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        props: {\r\n            comments,\r\n        },\r\n    }\r\n}\r\n\r\nexport default Blog"]},"metadata":{},"sourceType":"module"}