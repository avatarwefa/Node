{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\components\\\\Movie\\\\Comment.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nfunction Comment({\n  comments\n}) {\n  let {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  let {\n    0: disliked,\n    1: setDisLiked\n  } = useState(false);\n  let {\n    0: showReply,\n    1: setShowReply\n  } = useState(false);\n  let {\n    0: flagged,\n    1: setFlagged\n  } = useState(false);\n\n  function toggleLike() {\n    setLiked(!liked);\n  }\n\n  function toggleDisLike() {\n    setDisLiked(!disliked);\n  }\n\n  function toggleReply() {\n    setShowReply(!showReply);\n  }\n\n  function flag() {\n    setFlagged(flagged = true);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"mv-user-comment-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Write Your Comment Here:\"), __jsx(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \" \", __jsx(\"textarea\", {\n    name: \"\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 34\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \" SUBMIT \")), __jsx(\"p\", {\n    style: {\n      fontSize: \"12px\",\n      color: \"#a79f9f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"5 comments \"), comments.map((comment, index) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"mv-user-comment-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"avatarcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    className: \"avatar\",\n    src: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  })), __jsx(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \" \", comment.UserName, \" \"), __jsx(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, \" \", comment.created_at, \" \")), __jsx(\"div\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, \" \", comment.Body, \" \"), __jsx(\"div\", {\n    className: \"iconcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleLike,\n    style: {\n      color: liked ? \"blue\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 121\n    }\n  }), \" \", comment.Like, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleDisLike,\n    style: {\n      color: disliked ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 126\n    }\n  }), \" \", comment.Dislike, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: toggleReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 78\n    }\n  }), \" \", comment.replyCount, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: flag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-flag\",\n    style: {\n      color: flagged ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 71\n    }\n  }), \" \")))), __jsx(\"div\", {\n    style: {\n      display: showReply ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, comment.childComments.map((reply, index) => __jsx(\"div\", {\n    className: \"mv-user-reply-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"avatarcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: \"avatar\",\n    src: \"\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, \" \", reply.UserName, \" \"), __jsx(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }\n  }, \" \", reply.created_at, \" \")), __jsx(\"div\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, \" \", reply.Body, \" \"), __jsx(\"div\", {\n    className: \"iconcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"icon\",\n    onClick: function (event) {\n      toggleLike();\n    },\n    style: {\n      color: liked ? \"blue\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 153\n    }\n  }), \" \", reply.Like, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: function (event) {\n      toggleDisLike();\n    },\n    style: {\n      color: disliked ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, \" \", __jsx(\"i\", {\n    className: \"fa fa-thumbs-o-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 157\n    }\n  }), \" \", reply.Dislike, \" \"), __jsx(\"div\", {\n    className: \"icon\",\n    onClick: flag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 41\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-flag\",\n    style: {\n      color: flagged ? \"red\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 79\n    }\n  }), \" \"))))), __jsx(\"div\", {\n    className: \"mv-user-reply-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, __jsx(\"textarea\", {\n    name: \"\",\n    id: \"\",\n    placeholder: \"Write your reply here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \" SUBMIT \"))))));\n}\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('http://127.0.0.1:8000/api/comment/showComments/1');\n  const comments = await res.json(); // By returning { props: { posts } }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      comments\n    }\n  };\n}\nexport default Comment;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/components/Movie/Comment.tsx"],"names":["React","useState","Comment","comments","liked","setLiked","disliked","setDisLiked","showReply","setShowReply","flagged","setFlagged","toggleLike","toggleDisLike","toggleReply","flag","fontSize","color","map","comment","index","UserName","created_at","Body","Like","Dislike","replyCount","display","childComments","reply","event","getStaticProps","res","fetch","json","props"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Comment({comments}) {\r\n    let [liked, setLiked] = useState(false);\r\n    let [disliked, setDisLiked] = useState(false);\r\n    let [showReply, setShowReply] = useState(false);\r\n    let [flagged, setFlagged] = useState(false);\r\n    function toggleLike() {\r\n        setLiked(!liked);\r\n    }\r\n    function toggleDisLike() {\r\n        setDisLiked(!disliked);\r\n    }\r\n    function toggleReply() {\r\n        setShowReply(!showReply);\r\n    }\r\n    function flag() {\r\n        setFlagged(flagged = true);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"mv-user-comment-box\">\r\n                <p>Write Your Comment Here:</p>\r\n                <form action=\"\"> <textarea name=\"\" id=\"\"></textarea></form>\r\n                <button type=\"submit\"> SUBMIT </button>\r\n            </div>\r\n            <p style={{ fontSize: \"12px\", color: \"#a79f9f\" }}>5 comments </p>\r\n            {comments.map((comment, index) => (\r\n                <div>\r\n                    <div className=\"mv-user-comment-item\" key={index}>\r\n                        <div className=\"avatarcontainer\">\r\n                            <img className=\"avatar\" src=\"\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"body\">\r\n                            <div className=\"info\">\r\n                                <div className=\"name\"> {comment.UserName} </div>\r\n                                <div className=\"time\"> {comment.created_at} </div>\r\n                            </div>\r\n                            <div className=\"comment\"> {comment.Body} </div>\r\n                            <div className=\"iconcontainer\">\r\n                                <div className=\"icon\" onClick={toggleLike} style={{ color: liked ? \"blue\" : \"black\" }}> <i className=\"fa fa-thumbs-o-up\"></i> {comment.Like} </div>\r\n                                <div className=\"icon\" onClick={toggleDisLike} style={{ color: disliked ? \"red\" : \"black\" }}> <i className=\"fa fa-thumbs-o-down\"></i> {comment.Dislike} </div>\r\n                                <div className=\"icon\" onClick={toggleReply} ><i className=\"fa fa-reply\"></i> {comment.replyCount} </div>\r\n                                <div className=\"icon\" onClick={flag} ><i className=\"fa fa-flag\" style={{ color: flagged ? \"red\" : \"black\" }}></i> </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: showReply ? \"block\" : \"none\" }}>\r\n                        {comment.childComments.map((reply, index) => (\r\n                            <div className=\"mv-user-reply-item\" key={index}>\r\n                                <div className=\"avatarcontainer\">\r\n                                    <img className=\"avatar\" src=\"\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"body\">\r\n                                    <div className=\"info\">\r\n                                        <div className=\"name\"> {reply.UserName} </div>\r\n                                        <div className=\"time\"> {reply.created_at} </div>\r\n                                    </div>\r\n                                    <div className=\"comment\"> {reply.Body} </div>\r\n                                    <div className=\"iconcontainer\">\r\n                                        <div className=\"icon\" onClick={function (event) { toggleLike() }} style={{ color: liked ? \"blue\" : \"black\" }} > <i className=\"fa fa-thumbs-o-up\"></i> {reply.Like} </div>\r\n                                        <div className=\"icon\" onClick={function (event) { toggleDisLike() }} style={{ color: disliked ? \"red\" : \"black\" }}> <i className=\"fa fa-thumbs-o-down\"></i> {reply.Dislike} </div>\r\n                                        <div className=\"icon\" onClick={flag} ><i className=\"fa fa-flag\" style={{ color: flagged ? \"red\" : \"black\" }}></i> </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"mv-user-reply-box\">\r\n                            <textarea name=\"\" id=\"\" placeholder=\"Write your reply here...\"></textarea>\r\n                            <button> SUBMIT </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport async function getStaticProps() {\r\n    // Call an external API endpoint to get posts.\r\n    // You can use any data fetching library\r\n    const res = await fetch('http://127.0.0.1:8000/api/comment/showComments/1')\r\n    const comments = await res.json()\r\n\r\n    // By returning { props: { posts } }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    return {\r\n        props: {\r\n            comments,\r\n        },\r\n    }\r\n}\r\n\r\nexport default Comment"]},"metadata":{},"sourceType":"module"}