{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\components\\\\Search\\\\SearchGenre.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, Hits, SearchBox, Configure } from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\nimport { useRouter } from \"next/router\";\nvar algoliaClient = algoliasearch('ZKW9BQZTYO', '30893489e7dd37f194b7947ceeaa6523');\nvar searchClient = {\n  search: function search(requests) {\n    if (requests.every(function (_ref) {\n      var params = _ref.params;\n      return !params.query;\n    })) {\n      return Promise.resolve({\n        results: requests.map(function () {\n          return {\n            hits: [],\n            nbHits: 0,\n            nbPages: 0,\n            processingTimeMS: 0\n          };\n        })\n      });\n    }\n\n    return algoliaClient.search(requests);\n  }\n};\n\nvar Hit = function Hit(_ref2) {\n  var hit = _ref2.hit;\n  return __jsx(\"a\", {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"genre-item\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: \"images/uploads/film1.jpg\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \" \", hit.GenreName, \" \"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \" (Genre) \"))));\n};\n\n_c = Hit;\nHit.propTypes = {\n  hit: PropTypes.object.isRequired\n};\n\nvar GenreResult = function GenreResult() {\n  _s();\n\n  var router = useRouter();\n  var index = router.query.index;\n  return __jsx(InstantSearch, {\n    searchClient: searchClient,\n    indexName: \"Genres\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Configure, {\n    hitsPerPage: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), __jsx(SearchBox, {\n    className: \"immediately-search-box display-none\",\n    translations: {\n      placeholder: 'Search for Movies, Genres that you are looking for'\n    },\n    defaultRefinement: index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(Hits, {\n    hitComponent: Hit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(GenreResult, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = GenreResult;\nexport default GenreResult;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hit\");\n$RefreshReg$(_c2, \"GenreResult\");","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/components/Search/SearchGenre.tsx"],"names":["React","algoliasearch","InstantSearch","Hits","SearchBox","Configure","PropTypes","useRouter","algoliaClient","searchClient","search","requests","every","params","query","Promise","resolve","results","map","hits","nbHits","nbPages","processingTimeMS","Hit","hit","GenreName","propTypes","object","isRequired","GenreResult","router","index","placeholder"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport Link from 'next/link';\r\nimport {\r\n    InstantSearch,\r\n    Hits,\r\n    SearchBox,\r\n    Configure\r\n} from 'react-instantsearch-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {useRouter} from \"next/router\";\r\n\r\nconst algoliaClient = algoliasearch(\r\n    'ZKW9BQZTYO',\r\n    '30893489e7dd37f194b7947ceeaa6523'\r\n);\r\n\r\nconst searchClient = {\r\n    search(requests) {\r\n        if (requests.every(({ params }) => !params.query)) {\r\n            return Promise.resolve({\r\n                results: requests.map(() => ({\r\n                    hits: [],\r\n                    nbHits: 0,\r\n                    nbPages: 0,\r\n                    processingTimeMS: 0,\r\n                })),\r\n            });\r\n        }\r\n\r\n        return algoliaClient.search(requests);\r\n    },\r\n};\r\n\r\nconst Hit = ({ hit }) => (\r\n    <a href={\"/\"}>\r\n        <div className=\"genre-item\">\r\n            <div className=\"avatar\">\r\n                <img src=\"images/uploads/film1.jpg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"info\">\r\n                <h4> {hit.GenreName} </h4>\r\n                <p> (Genre) </p>\r\n            </div>\r\n        </div>\r\n    </a>\r\n);\r\n\r\nHit.propTypes = {\r\n    hit: PropTypes.object.isRequired,\r\n};\r\n\r\ninterface Props{\r\n\r\n}\r\n\r\nconst GenreResult: React.FunctionComponent<Props> = () => {\r\n    const router = useRouter();\r\n    const {\r\n        query:{index},\r\n    }=router\r\n    return (\r\n        <InstantSearch searchClient={searchClient} indexName=\"Genres\">\r\n            <Configure hitsPerPage={3} />\r\n            <SearchBox\r\n                className=\"immediately-search-box display-none\"\r\n                translations={{\r\n                    placeholder: 'Search for Movies, Genres that you are looking for',\r\n                }}\r\n                defaultRefinement={index}\r\n            />\r\n            <Hits hitComponent={Hit} />\r\n            {/* <Link style={{display: show? \"block\" : \"none\"}} href='searchresult'>\r\n              <div className=\"bottom\">\r\n                <a href=\"searchresult\"> See all results </a>\r\n              </div>\r\n            </Link> */}\r\n        </InstantSearch>\r\n    );\r\n}\r\n\r\nexport default GenreResult;\r\n"]},"metadata":{},"sourceType":"module"}