{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\public\\\\js\\\\imediatelysearch.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { InstantSearch, Highlight } from 'react-instantsearch/dom';\nimport { connectAutoComplete } from 'react-instantsearch/connectors';\nimport Autocomplete from 'downshift';\n\nfunction RawAutoComplete({\n  refine,\n  hits\n}) {\n  return __jsx(Autocomplete, {\n    itemToString: i => i ? i.name : i,\n    onChange: item => alert(JSON.stringify(item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, ({\n    getInputProps,\n    getItemProps,\n    selectedItem,\n    highlightedIndex,\n    isOpen\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    onChange(e) {\n      refine(e.target.value);\n    }\n\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  })), isOpen && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, hits.map((item, index) => __jsx(\"div\", _extends({\n    key: item.objectID\n  }, getItemProps({\n    item,\n    index,\n    style: {\n      backgroundColor: highlightedIndex === index ? 'gray' : 'white',\n      fontWeight: selectedItem === item ? 'bold' : 'normal'\n    }\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Highlight, {\n    attributeName: \"name\",\n    hit: item,\n    tagName: \"mark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }))))));\n}\n\nconst AutoCompleteWithData = connectAutoComplete(RawAutoComplete);\n\nfunction Example() {\n  return __jsx(InstantSearch, {\n    appId: \"latency\",\n    apiKey: \"6be0576ff61c053d5f9a3225e2a90f76\",\n    indexName: \"actors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Algolia\", ' ', __jsx(\"a\", {\n    href: \"https://community.algolia.com/react-instantsearch/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"React InstantSearch\"), ' ', \"example\", __jsx(AutoCompleteWithData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Example;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/public/js/imediatelysearch.js"],"names":["React","render","InstantSearch","Highlight","connectAutoComplete","Autocomplete","RawAutoComplete","refine","hits","i","name","item","alert","JSON","stringify","getInputProps","getItemProps","selectedItem","highlightedIndex","isOpen","onChange","e","target","value","map","index","objectID","style","backgroundColor","fontWeight","AutoCompleteWithData","Example"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,QAAuC,yBAAvC;AACA,SAAQC,mBAAR,QAAkC,gCAAlC;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AAEA,SAASC,eAAT,CAAyB;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAzB,EAAyC;AACvC,SACE,MAAC,YAAD;AACE,IAAA,YAAY,EAAEC,CAAC,IAAKA,CAAC,GAAGA,CAAC,CAACC,IAAL,GAAYD,CADnC;AAEE,IAAA,QAAQ,EAAEE,IAAI,IAAIC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,CAAC;AACAI,IAAAA,aADA;AAEAC,IAAAA,YAFA;AAGAC,IAAAA,YAHA;AAIAC,IAAAA,gBAJA;AAKAC,IAAAA;AALA,GAAD,KAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACMJ,aAAa,CAAC;AAChBK,IAAAA,QAAQ,CAACC,CAAD,EAAI;AACVd,MAAAA,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD;;AAHe,GAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQGJ,MAAM,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,CAACgB,GAAL,CAAS,CAACb,IAAD,EAAOc,KAAP,KACR;AACE,IAAA,GAAG,EAAEd,IAAI,CAACe;AADZ,KAEMV,YAAY,CAAC;AACfL,IAAAA,IADe;AAEfc,IAAAA,KAFe;AAGfE,IAAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EACbV,gBAAgB,KAAKO,KAArB,GAA6B,MAA7B,GAAsC,OAFnC;AAGLI,MAAAA,UAAU,EAAEZ,YAAY,KAAKN,IAAjB,GAAwB,MAAxB,GAAiC;AAHxC;AAHQ,GAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYE,MAAC,SAAD;AAAW,IAAA,aAAa,EAAC,MAAzB;AAAgC,IAAA,GAAG,EAAEA,IAArC;AAA2C,IAAA,OAAO,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADD,CADH,CATJ,CAXJ,CADF;AA0CD;;AAED,MAAMmB,oBAAoB,GAAG1B,mBAAmB,CAACE,eAAD,CAAhD;;AAEA,SAASyB,OAAT,GAAmB;AACjB,SACE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,MAAM,EAAC,kCAFT;AAGE,IAAA,SAAS,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKU,GALV,EAME;AAAG,IAAA,IAAI,EAAC,oDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,EAQO,GARP,aAUE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD;;AAED,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {InstantSearch, Highlight} from 'react-instantsearch/dom'\r\nimport {connectAutoComplete} from 'react-instantsearch/connectors'\r\nimport Autocomplete from 'downshift'\r\n\r\nfunction RawAutoComplete({refine, hits}) {\r\n  return (\r\n    <Autocomplete\r\n      itemToString={i => (i ? i.name : i)}\r\n      onChange={item => alert(JSON.stringify(item))}\r\n    >\r\n      {({\r\n        getInputProps,\r\n        getItemProps,\r\n        selectedItem,\r\n        highlightedIndex,\r\n        isOpen,\r\n      }) =>\r\n        <div>\r\n          <input\r\n            {...getInputProps({\r\n              onChange(e) {\r\n                refine(e.target.value)\r\n              },\r\n            })}\r\n          />\r\n          {isOpen &&\r\n            <div>\r\n              {hits.map((item, index) =>\r\n                <div\r\n                  key={item.objectID}\r\n                  {...getItemProps({\r\n                    item,\r\n                    index,\r\n                    style: {\r\n                      backgroundColor:\r\n                        highlightedIndex === index ? 'gray' : 'white',\r\n                      fontWeight: selectedItem === item ? 'bold' : 'normal',\r\n                    },\r\n                  })}\r\n                >\r\n                  <Highlight attributeName=\"name\" hit={item} tagName=\"mark\" />\r\n                </div>,\r\n              )}\r\n            </div>}\r\n        </div>}\r\n    </Autocomplete>\r\n  )\r\n}\r\n\r\nconst AutoCompleteWithData = connectAutoComplete(RawAutoComplete)\r\n\r\nfunction Example() {\r\n  return (\r\n    <InstantSearch\r\n      appId=\"latency\"\r\n      apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"\r\n      indexName=\"actors\"\r\n    >\r\n      Algolia{' '}\r\n      <a href=\"https://community.algolia.com/react-instantsearch/\">\r\n        React InstantSearch\r\n      </a>{' '}\r\n      example\r\n      <AutoCompleteWithData />\r\n    </InstantSearch>\r\n  )\r\n}\r\n\r\nexport default Example\r\n"]},"metadata":{},"sourceType":"module"}