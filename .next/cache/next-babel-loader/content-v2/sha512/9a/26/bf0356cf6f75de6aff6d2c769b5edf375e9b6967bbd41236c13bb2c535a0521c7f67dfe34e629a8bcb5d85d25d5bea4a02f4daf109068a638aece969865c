{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\public\\\\js\\\\immediatelysearch.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport { InstantSearch, Hits, SearchBox, Pagination, Highlight } from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\nconst algoliaClient = algoliasearch('XJAGT21XS0', '54a973d94697a6de6b319d890639c9ca');\nconst searchClient = {\n  search(requests) {\n    if (requests.every(({\n      params\n    }) => !params.query)) {\n      return Promise.resolve({\n        results: requests.map(() => ({\n          hits: [],\n          nbHits: 0,\n          nbPages: 0,\n          processingTimeMS: 0\n        }))\n      });\n    }\n\n    return algoliaClient.search(requests);\n  }\n\n};\n\nclass App extends Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      className: \"header-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"conditional-request\")), __jsx(\"p\", {\n      className: \"header-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"using\", ' ', __jsx(\"a\", {\n      href: \"https://github.com/algolia/react-instantsearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"React InstantSearch\"))), __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(InstantSearch, {\n      searchClient: searchClient,\n      indexName: \"movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, __jsx(SearchBox, {\n      className: \"immediately-search-box\",\n      translations: {\n        placeholder: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), __jsx(Hits, {\n      hitComponent: Hit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst Hit = ({\n  hit\n}) => __jsx(\"a\", {\n  href: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"movie-item-style-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}, __jsx(\"img\", {\n  src: hit.urlCover,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}), __jsx(\"div\", {\n  className: \"mv-item-infor\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }\n}, __jsx(\"h6\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n}, __jsx(\"a\", {\n  href: \"moviesingle_light.html\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n}, hit.Title, \" (\", hit.Year, \") \")), __jsx(\"p\", {\n  className: \"rate\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }\n}, __jsx(\"i\", {\n  className: \"ion-android-star\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 29\n  }\n}), __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 65\n  }\n}, hit.IMDB), \" /10\"), __jsx(\"p\", {\n  className: \"describe\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }\n}, hit.Description), __jsx(\"p\", {\n  className: \"run-time\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }\n}, \" Run Time: \", hit.Length, \" . \", __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 59\n  }\n}, hit.Quality, \" \"), \" . \", __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 89\n  }\n}, \"Release: \", hit.created_at)), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }\n}, \"Director: \", __jsx(\"a\", {\n  href: \"#\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 22\n  }\n}, hit.Directors)), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }\n}, \"Stars: \", __jsx(\"a\", {\n  href: \"#\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 19\n  }\n}, hit.Actors, \" \"), \" \"))));\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/public/js/immediatelysearch.js"],"names":["React","Component","algoliasearch","InstantSearch","Hits","SearchBox","Pagination","Highlight","PropTypes","algoliaClient","searchClient","search","requests","every","params","query","Promise","resolve","results","map","hits","nbHits","nbPages","processingTimeMS","App","render","placeholder","Hit","hit","urlCover","Title","Year","IMDB","Description","Length","Quality","created_at","Directors","Actors","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport {\r\n  InstantSearch,\r\n  Hits,\r\n  SearchBox,\r\n  Pagination,\r\n  Highlight,\r\n} from 'react-instantsearch-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst algoliaClient = algoliasearch(\r\n  'XJAGT21XS0',\r\n  '54a973d94697a6de6b319d890639c9ca'\r\n);\r\n\r\nconst searchClient = {\r\n  search(requests) {\r\n    if (requests.every(({ params }) => !params.query)) {\r\n      return Promise.resolve({\r\n        results: requests.map(() => ({\r\n          hits: [],\r\n          nbHits: 0,\r\n          nbPages: 0,\r\n          processingTimeMS: 0,\r\n        })),\r\n      });\r\n    }\r\n\r\n    return algoliaClient.search(requests);\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header\">\r\n          <h1 className=\"header-title\">\r\n            <a href=\"/\">conditional-request</a>\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            using{' '}\r\n            <a href=\"https://github.com/algolia/react-instantsearch\">\r\n              React InstantSearch\r\n            </a>\r\n          </p>\r\n        </header>\r\n\r\n        <div className=\"container\">\r\n          <InstantSearch searchClient={searchClient} indexName=\"movie\">\r\n            <SearchBox\r\n              className=\"immediately-search-box\"\r\n              translations={{\r\n                placeholder: '',\r\n              }}\r\n            />\r\n            <Hits hitComponent={Hit} />\r\n          </InstantSearch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Hit = ({ hit }) => (\r\n  <a href={\"/\"}>\r\n    <div className=\"movie-item-style-2\">\r\n      <img src={hit.urlCover} alt=\"\" />\r\n      <div className=\"mv-item-infor\">\r\n        <h6><a href=\"moviesingle_light.html\">{hit.Title} ({hit.Year}) </a></h6>\r\n        <p className=\"rate\"><i className=\"ion-android-star\"></i><span>{hit.IMDB}</span> /10</p>\r\n        <p className=\"describe\">{hit.Description}</p>\r\n        <p className=\"run-time\"> Run Time: {hit.Length} . <span>{hit.Quality} </span> . <span>Release: {hit.created_at}</span></p>\r\n        <p>Director: <a href=\"#\">{hit.Directors}</a></p>\r\n        <p>Stars: <a href=\"#\">{hit.Actors} </a> </p>\r\n      </div>\r\n    </div>\r\n  </a>\r\n);\r\n\r\nHit.propTypes = {\r\n  hit: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}