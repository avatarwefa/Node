{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\public\\\\js\\\\abc.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { InstantSearch, HierarchicalMenu, Hits, Menu, Pagination, PoweredBy, StarRating, RefinementList, SearchBox, ClearAll } from \"react-instantsearch-dom\";\nimport { createConnector } from \"react-instantsearch-core\";\nimport PropTypes from \"prop-types\";\nimport algoliasearch from \"algoliasearch\";\nimport queryString from 'query-string';\nconst updateAfter = 700;\n\nconst createURL = state => `?${queryString.stringify(state)}`;\n\nconst searchStateToUrl = (props, searchState) => searchState ? `${props.location.pathname}${createURL(searchState)}` : \"\";\n\nconst searchClient = algoliasearch(\"ZKW9BQZTYO\", \"30893489e7dd37f194b7947ceeaa6523\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSearchStateChange\", searchState => {\n      clearTimeout(this.debouncedSetState);\n      this.debouncedSetState = setTimeout(() => {\n        this.props.history.push(searchStateToUrl(this.props, searchState), searchState);\n      }, updateAfter);\n      this.setState({\n        searchState\n      });\n    });\n\n    this.state = {\n      searchState: queryString.parse(props.location.search.slice(1))\n    };\n  }\n\n  render() {\n    return __jsx(InstantSearch, {\n      searchClient: searchClient,\n      indexName: \"movie\",\n      searchState: this.state.searchState,\n      onSearchStateChange: this.onSearchStateChange.bind(this),\n      createURL: createURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, __jsx(SearchBox, {\n      className: \"SearchBox\",\n      translations: {\n        placeholder: \"Enter a Controversy\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), __jsx(MyHits, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst MyHits = createConnector({\n  displayName: \"ConditionalQuery\",\n\n  getProvidedProps(props, searchState, searchResults) {\n    const {\n      query,\n      hits\n    } = searchResults.results ? searchResults.results : {};\n    return {\n      query,\n      hits\n    };\n  }\n\n})(({\n  query,\n  hits\n}) => {\n  const hs = hits && query ? hits.map(hit => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, hit.Title, hit.Description)) : null;\n  return __jsx(\"div\", {\n    id: \"hits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, hs);\n});\nApp.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }),\n  location: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/public/js/abc.js"],"names":["React","Component","InstantSearch","HierarchicalMenu","Hits","Menu","Pagination","PoweredBy","StarRating","RefinementList","SearchBox","ClearAll","createConnector","PropTypes","algoliasearch","queryString","updateAfter","createURL","state","stringify","searchStateToUrl","props","searchState","location","pathname","searchClient","App","constructor","clearTimeout","debouncedSetState","setTimeout","history","push","setState","parse","search","slice","render","onSearchStateChange","bind","placeholder","MyHits","displayName","getProvidedProps","searchResults","query","hits","results","hs","map","hit","Title","Description","propTypes","shape","func","isRequired","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    InstantSearch,\r\n    HierarchicalMenu,\r\n    Hits,\r\n    Menu,\r\n    Pagination,\r\n    PoweredBy,\r\n    StarRating,\r\n    RefinementList,\r\n    SearchBox,\r\n    ClearAll\r\n} from \"react-instantsearch-dom\";\r\nimport { createConnector } from \"react-instantsearch-core\";\r\nimport PropTypes from \"prop-types\";\r\nimport algoliasearch from \"algoliasearch\";\r\nimport queryString from 'query-string';\r\n\r\nconst updateAfter = 700;\r\n\r\nconst createURL = state => `?${queryString.stringify(state)}`;\r\n\r\nconst searchStateToUrl = (props, searchState) =>\r\n    searchState ? `${props.location.pathname}${createURL(searchState)}` : \"\";\r\n\r\nconst searchClient = algoliasearch(\r\n    \"ZKW9BQZTYO\",\r\n    \"30893489e7dd37f194b7947ceeaa6523\"\r\n);\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { searchState: queryString.parse(props.location.search.slice(1)) };\r\n    }\r\n\r\n    onSearchStateChange = searchState => {\r\n        clearTimeout(this.debouncedSetState);\r\n        this.debouncedSetState = setTimeout(() => {\r\n            this.props.history.push(\r\n                searchStateToUrl(this.props, searchState),\r\n                searchState\r\n            );\r\n        }, updateAfter);\r\n        this.setState({ searchState });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <InstantSearch\r\n                searchClient={searchClient}\r\n                indexName=\"movie\"\r\n                searchState={this.state.searchState}\r\n                onSearchStateChange={this.onSearchStateChange.bind(this)}\r\n                createURL={createURL}\r\n            >\r\n                <SearchBox\r\n                    className=\"SearchBox\"\r\n                    translations={{ placeholder: \"Enter a Controversy\" }}\r\n                />\r\n                <MyHits />\r\n            </InstantSearch>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyHits = createConnector({\r\n    displayName: \"ConditionalQuery\",\r\n    getProvidedProps(props, searchState, searchResults) {\r\n        const { query, hits } = searchResults.results ? searchResults.results : {};\r\n        return { query, hits };\r\n    }\r\n})(({ query, hits }) => {\r\n    const hs =\r\n        hits && query\r\n            ? hits.map(hit =>\r\n                <div>\r\n                    {hit.Title}\r\n                    {hit.Description}\r\n                </div>\r\n            )\r\n            : null;\r\n    return (\r\n        <div id=\"hits\">\r\n            {hs}\r\n        </div>\r\n    );\r\n});\r\n\r\nApp.propTypes = {\r\n    history: PropTypes.shape({\r\n        push: PropTypes.func.isRequired\r\n    }),\r\n    location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}