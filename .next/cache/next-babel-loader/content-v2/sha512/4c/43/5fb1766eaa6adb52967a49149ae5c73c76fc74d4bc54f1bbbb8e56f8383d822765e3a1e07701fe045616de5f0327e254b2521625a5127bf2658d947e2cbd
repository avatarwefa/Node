{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Lu\\u1EADn v\\u0103n t\\u1ED1t nghi\\u1EC7p\\\\luanvan201frontend\\\\public\\\\js\\\\immediatelysearch.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport Link from 'next/link';\nimport { InstantSearch, Hits, SearchBox, Configure } from 'react-instantsearch-dom';\nimport PropTypes from 'prop-types';\nconst algoliaClient = algoliasearch('ZKW9BQZTYO', '30893489e7dd37f194b7947ceeaa6523');\nconst searchClient = {\n  search(requests) {\n    if (requests.every(({\n      params\n    }) => !params.query)) {\n      return Promise.resolve({\n        results: requests.map(() => ({\n          hits: [],\n          nbHits: 0,\n          nbPages: 0,\n          processingTimeMS: 0\n        }))\n      });\n    }\n\n    return algoliaClient.search(requests);\n  }\n\n};\n\nfunction App() {\n  propTypes = {\n    history: PropTypes.object.isRequired\n  };\n  let {\n    0: index,\n    1: setIndex\n  } = useState(\"\");\n  return __jsx(InstantSearch, {\n    searchClient: searchClient,\n    indexName: \"Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Configure, {\n    hitsPerPage: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(SearchBox, {\n    className: \"immediately-search-box\",\n    translations: {\n      placeholder: 'Search for Movies, Genres that you are looking for'\n    },\n    onSubmit: event => {\n      event.preventDefault(); // window.location.href = '/searchresult?' + index + '';\n\n      this.props.history.push('/searchresult');\n    },\n    onChange: event => {\n      setIndex(index = event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"search-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Hits, {\n    hitComponent: Hit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst Hit = ({\n  hit\n}) => __jsx(\"a\", {\n  href: \"/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"item\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"avatar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }\n}, __jsx(\"img\", {\n  src: hit.urlCover,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }\n})), __jsx(\"div\", {\n  className: \"info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }\n}, __jsx(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }\n}, \" \", hit.Title, \" \"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }\n}, \" \", hit.Year, \" \"), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }\n}, __jsx(\"label\", {\n  style: {\n    color: 'orange',\n    fontSize: '15px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 11\n  }\n}, \"\\u2605\"), \" \", hit.IMDB, __jsx(\"span\", {\n  style: {\n    fontSize: '10px',\n    marginLeft: '-2px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 11\n  }\n}, \" /10 \")))));\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["D:/Study/Luận văn tốt nghiệp/luanvan201frontend/public/js/immediatelysearch.js"],"names":["React","Component","useState","algoliasearch","Link","InstantSearch","Hits","SearchBox","Configure","PropTypes","algoliaClient","searchClient","search","requests","every","params","query","Promise","resolve","results","map","hits","nbHits","nbPages","processingTimeMS","App","propTypes","history","object","isRequired","index","setIndex","placeholder","event","preventDefault","props","push","target","value","Hit","hit","urlCover","Title","Year","color","fontSize","IMDB","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport algoliasearch from 'algoliasearch/lite';\r\nimport Link from 'next/link';\r\nimport {\r\n  InstantSearch,\r\n  Hits,\r\n  SearchBox,\r\n  Configure\r\n} from 'react-instantsearch-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst algoliaClient = algoliasearch(\r\n  'ZKW9BQZTYO',\r\n  '30893489e7dd37f194b7947ceeaa6523'\r\n);\r\nconst searchClient = {\r\n  search(requests) {\r\n    if (requests.every(({ params }) => !params.query)) {\r\n      return Promise.resolve({\r\n        results: requests.map(() => ({\r\n          hits: [],\r\n          nbHits: 0,\r\n          nbPages: 0,\r\n          processingTimeMS: 0,\r\n        })),\r\n      });\r\n    }\r\n\r\n    return algoliaClient.search(requests);\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  propTypes = {\r\n    history: PropTypes.object.isRequired\r\n  }\r\n  let [index, setIndex] = useState(\"\");\r\n  return (\r\n    <InstantSearch searchClient={searchClient} indexName=\"Movies\">\r\n      <Configure hitsPerPage={5} />\r\n      <SearchBox\r\n        className=\"immediately-search-box\"\r\n        translations={{\r\n          placeholder: 'Search for Movies, Genres that you are looking for',\r\n        }}\r\n        onSubmit={event => {\r\n          event.preventDefault();\r\n          // window.location.href = '/searchresult?' + index + '';\r\n          this.props.history.push('/searchresult')\r\n        }}\r\n        onChange={event => {\r\n          setIndex(index = event.target.value);\r\n        }}\r\n      />\r\n      <div className=\"search-result\">\r\n        <Hits hitComponent={Hit} />\r\n        {/* <Link style={{display: show? \"block\" : \"none\"}} href='searchresult'>\r\n          <div className=\"bottom\">\r\n            <a href=\"searchresult\"> See all results </a>\r\n          </div>\r\n        </Link> */}\r\n      </div>\r\n    </InstantSearch>\r\n  );\r\n}\r\n\r\nconst Hit = ({ hit }) => (\r\n  <a href={\"/\"}>\r\n    <div className=\"item\">\r\n      <div className=\"avatar\">\r\n        <img src={hit.urlCover} alt=\"\" />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h4> {hit.Title} </h4>\r\n        <p> {hit.Year} </p>\r\n        <div>\r\n          <label style={{ color: 'orange', fontSize: '15px' }}>★</label> {hit.IMDB}\r\n          <span style={{ fontSize: '10px', marginLeft: '-2px' }}> /10 </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a>\r\n);\r\n\r\nHit.propTypes = {\r\n  hit: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}